// Light mode
$primary-light: #fff;
$secondary-light: #0052aa;
// Dark mode
$primary-dark: #221a1a;
$secondary-dark: #00a7aa;

$primary: 'primary';
$secondary: 'secondary';

$themes: (
    light: (
        primary: $primary-light,
        secondary: $secondary-light
    ),

    dark: (
        primary: $primary-dark,
        secondary: $secondary-dark
    ),
);

@mixin themed() {
    @each $theme, $map in $themes {
      [data-theme= '#{$theme}'] & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
@function t($key) {
    @return map-get($theme-map, $key);
}

$background-opacity: 0.9;

@mixin easeOut {
    transition: all 1.5s ease-out;
}

#bg {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    @include themed() {
        background: rgba(t(primary), $background-opacity);
    }
}     

#particles-js {
    @include themed() {
        background: linear-gradient(10deg, t(primary), t(secondary));
    }
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: -1;
}

// Set Text Colour
@function set-text-colour($color) {
    @if (lightness($color) > 40) {
        @return #000000;
    } @else {
        @return #fff;
    }
}

// Media Query Mixins
@mixin  mediaSm {
    @media screen and (max-width: 500px) {
        @content;
    }
}

@mixin  mediaMd {
    @media screen and (max-width: 768px) {
        @content;
    }
}

@mixin  mediaLg {
    @media screen and (min-width: 769px) and (max-width: 1170px) {
        @content;
    }
}

@mixin  mediaXL {
    @media screen and (min-width: 1171px) {
        @content;
    }
}